import tkinter as tk
import random
import pygame
import os

class Minesweeper:
    def __init__(self, master, rows, cols, mines):
        self.master = master
        self.rows = rows
        self.cols = cols
        self.mines = mines
        self.explosion_sound = os.path.join("assets", "explosion.wav")

        self.board = [[0 for _ in range(cols)] for _ in range(rows)]
        self.generate_mines()

        self.buttons = []
        for i in range(rows):
            row = []
            for j in range(cols):
                btn = tk.Button(master, width=2, relief="raised", command=lambda i=i, j=j: self.click(i, j))
                btn.grid(row=i, column=j)
                row.append(btn)
            self.buttons.append(row)

        pygame.init()
        pygame.mixer.init()

    def generate_mines(self):
        for _ in range(self.mines):
            row = random.randint(0, self.rows - 1)
            col = random.randint(0, self.cols - 1)
            while self.board[row][col] == -1:
                row = random.randint(0, self.rows - 1)
                col = random.randint(0, self.cols - 1)
            self.board[row][col] = -1

        for i in range(self.rows):
            for j in range(self.cols):
                if self.board[i][j] == -1:
                    continue
                count = 0
                for r in range(max(0, i - 1), min(self.rows, i + 2)):
                    for c in range(max(0, j - 1), min(self.cols, j + 2)):
                        if self.board[r][c] == -1:
                            count += 1
                self.board[i][j] = count

    def click(self, row, col):
        if self.board[row][col] == -1:
            self.explode(row, col)
            self.game_over()
        elif self.board[row][col] == 0:
            self.reveal_empty(row, col)
        else:
            self.buttons[row][col].config(text=str(self.board[row][col]))

    def reveal_empty(self, row, col):
        if row < 0 or row >= self.rows or col < 0 or col >= self.cols:
            return
        if self.buttons[row][col]["text"] != "":
            return
        self.buttons[row][col].config(text=str(self.board[row][col]))
        if self.board[row][col] == 0:
            for r in range(max(0, row - 1), min(self.rows, row + 2)):
                for c in range(max(0, col - 1), min(self.cols, col + 2)):
                    self.reveal_empty(r, c)

    def explode(self, row, col):
        self.buttons[row][col].config(text="X", bg="red")
        pygame.mixer.Sound(self.explosion_sound).play()

    def game_over(self):
        for i in range(self.rows):
            for j in range(self.cols):
                if self.board[i][j] == -1:
                    self.buttons[i][j].config(text="X", bg="red")

def main():
    rows = 10
    cols = 10
    mines = 10

    root = tk.Tk()
    root.title("Minesweeper")
    game = Minesweeper(root, rows, cols, mines)
    root.mainloop()

if __name__ == "__main__":
    main()
